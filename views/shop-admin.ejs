<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Eagle Shop Admin</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <style>
      .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
      }
      .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
      }
      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
      }
      .close:hover,
      .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
      }
    </style>
  </head>
  <body class="bg-gray-100">
    <header class="bg-green-600 text-white py-4">
      <div class="container mx-auto px-4">
        <h1 class="text-2xl font-bold">
          <i class="fas fa-cog mr-2"></i>Eagle Shop Admin
        </h1>
      </div>
    </header>

    <main class="container mx-auto px-4 py-8">
      <button
        id="addProductBtn"
        class="bg-yellow-400 text-green-800 px-4 py-2 rounded-full hover:bg-yellow-500 transition duration-300 mb-4"
      >
        <i class="fas fa-plus mr-2"></i>Add New Product
      </button>

      <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <table class="w-full">
          <thead class="bg-green-500 text-white">
            <tr>
              <th class="py-2 px-4 text-left">QR Code</th>
              <th class="py-2 px-4 text-left">Name</th>
              <th class="py-2 px-4 text-left">Description</th>
              <th class="py-2 px-4 text-left">Price</th>
              <th class="py-2 px-4 text-left">Actions</th>
            </tr>
          </thead>
          <tbody id="productTableBody">
            <!-- Product rows will be dynamically inserted here -->
          </tbody>
        </table>
      </div>
    </main>

    <!-- Add/Edit Product Modal -->
    <div id="productModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalTitle" class="text-2xl font-bold mb-4">Add New Product</h2>
        <form id="productForm">
          <input type="hidden" id="productId" />
          <div class="mb-4">
            <label
              for="productName"
              class="block text-sm font-medium text-gray-700"
              >Product Name</label
            >
            <input
              type="text"
              id="productName"
              name="productName"
              required
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50"
            />
          </div>
          <div class="mb-4">
            <label
              for="productDescription"
              class="block text-sm font-medium text-gray-700"
              >Description</label
            >
            <textarea
              id="productDescription"
              name="productDescription"
              rows="3"
              required
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50"
            ></textarea>
          </div>
          <div class="mb-4">
            <label
              for="productPrice"
              class="block text-sm font-medium text-gray-700"
              >Price</label
            >
            <input
              type="number"
              id="productPrice"
              name="productPrice"
              step="0.01"
              required
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50"
            />
          </div>
          <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700"
              >QR Code Preview</label
            >
            <img
              id="qrCodePreview"
              src=""
              alt="QR Code Preview"
              class="mt-1 w-full h-48 object-contain bg-gray-100"
            />
          </div>
          <button
            type="submit"
            class="w-full bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition duration-300"
          >
            <i class="fas fa-save mr-2"></i>Save Product
          </button>
        </form>
      </div>
    </div>

    <footer class="bg-green-800 text-white py-4 mt-12">
      <div class="container mx-auto px-4 text-center">
        <p>&copy; 2023 Eagle Shop Admin. All rights reserved.</p>
      </div>
    </footer>

    <script>
      /*let products = [
        {
          id: 1,
          name: "Product 1",
          description: "Description of Product 1",
          price: 19.99,
        },
        {
          id: 2,
          name: "Product 2",
          description: "Description of Product 2",
          price: 24.99,
        },
        {
          id: 3,
          name: "Product 3",
          description: "Description of Product 3",
          price: 29.99,
        },
      ];*/

      const productTableBody = document.getElementById("productTableBody");
      const addProductBtn = document.getElementById("addProductBtn");
      const productModal = document.getElementById("productModal");
      const closeBtn = document.getElementsByClassName("close")[0];
      const productForm = document.getElementById("productForm");
      const modalTitle = document.getElementById("modalTitle");
      const qrCodePreview = document.getElementById("qrCodePreview");

      async function renderProducts() {
        //TODO fix it later
        const response = await fetch("/products");
        const data = await response.json();
        const products = data.products;
        productTableBody.innerHTML = "";
        products.forEach((product) => {
          const row = document.createElement("tr");
          row.innerHTML = `
                    <td class="py-2 px-4"><img src="${getQRCodeUrl(
                      product
                    )}" alt="${
            product.name
          } QR Code" class="w-16 h-16 object-contain"></td>
                    <td class="py-2 px-4">${product.name}</td>
                    <td class="py-2 px-4">${product.description}</td>
                    <td class="py-2 px-4">$${product.price.toFixed(2)}</td>
                    <td class="py-2 px-4">
                        <button onclick="editProduct(${
                          product.id
                        })" class="text-blue-600 hover:text-blue-800 mr-2">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="deleteProduct(${
                          product.id
                        })" class="text-red-600 hover:text-red-800">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                `;
          productTableBody.appendChild(row);
        });
      }

      function getQRCodeUrl(product) {
        return `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(
          `${product.name}-$${product.price.toFixed(2)}`
        )}`;
      }

      function showModal(title) {
        modalTitle.textContent = title;
        productModal.style.display = "block";
      }

      function hideModal() {
        productModal.style.display = "none";
        productForm.reset();
        document.getElementById("productId").value = "";
        qrCodePreview.src = "";
      }

      function addProduct() {
        showModal("Add New Product");
      }

      function editProduct(id) {
        const product = products.find((p) => p.id === id);
        if (product) {
          document.getElementById("productId").value = product.id;
          document.getElementById("productName").value = product.name;
          document.getElementById("productDescription").value =
            product.description;
          document.getElementById("productPrice").value = product.price;
          qrCodePreview.src = getQRCodeUrl(product);
          showModal("Edit Product");
        }
      }

      function deleteProduct(id) {
        if (confirm("Are you sure you want to delete this product?")) {
          products = products.filter((p) => p.id !== id);
          renderProducts();
        }
      }

      function updateQRCodePreview() {
        const name = document.getElementById("productName").value;
        const price = document.getElementById("productPrice").value;
        if (name && price) {
          qrCodePreview.src = getQRCodeUrl({ name, price });
        }
      }

      addProductBtn.onclick = addProduct;
      closeBtn.onclick = hideModal;
      window.onclick = function (event) {
        if (event.target == productModal) {
          hideModal();
        }
      };

      productForm.onsubmit = function (e) {
        e.preventDefault();
        const id = document.getElementById("productId").value;
        const name = document.getElementById("productName").value;
        const description = document.getElementById("productDescription").value;
        const price = parseFloat(document.getElementById("productPrice").value);

        if (id) {
          // Edit existing product
          const index = products.findIndex((p) => p.id === parseInt(id));
          if (index !== -1) {
            products[index] = { id: parseInt(id), name, description, price };
          }
        } else {
          // Add new product
          const newId = Math.max(...products.map((p) => p.id), 0) + 1;
          products.push({ id: newId, name, description, price });
        }

        renderProducts();
        hideModal();
      };

      document
        .getElementById("productName")
        .addEventListener("input", updateQRCodePreview);
      document
        .getElementById("productPrice")
        .addEventListener("input", updateQRCodePreview);

      // Initial render
      renderProducts();
    </script>
  </body>
</html>
